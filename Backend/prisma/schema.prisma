// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum
enum Role {
  ADMIN
  SUPERADMIN
}

enum ProjectKind {
  BOT
  MVC
  FULLSTACK
}

// Model
model User {
  id           String   @id @default(cuid())
  name         String
  username     String   @unique
  password     String
  refreshToken String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Status {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  detail     String?
  sequence   Int      @unique
  orders     Order[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  orders      Order[]
}

model Order {
  id           String      @id @db.VarChar(10)
  title        String
  description  String?
  down_payment Int?        @default(0)
  invoice      Int
  customer_id  String
  status_id    Int
  category_id  String
  customer     Customer    @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  status       Status      @relation(fields: [status_id], references: [id], onDelete: Cascade)
  category     Category    @relation(fields: [category_id], references: [id], onDelete: Cascade)
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  Testimoni    Testimoni[]
}

model Customer {
  id           String      @id @default(cuid())
  name         String
  whatsapp     String?
  telegram     String?
  address      String?
  count_orders Int?        @default(0)
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  orders       Order[]
  testimoni    Testimoni[]
}

model Testimoni {
  id          String   @id @default(cuid())
  rating      Int      @default(1)
  description String?
  status      Boolean  @default(false)
  order_id    String   @db.VarChar(10)
  customer_id String
  order       Order    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  customer    Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Project {
  id          String      @id @default(cuid())
  name        String
  description String?
  kind        ProjectKind
  image       String?
  video       String?
  is_active   Boolean     @default(false)
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
}
